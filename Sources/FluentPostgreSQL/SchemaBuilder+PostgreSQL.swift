//extension SchemaBuilder {
//    public func field<T>(for keyPath: KeyPath<Model, T>, type: PostgreSQLColumnType, primaryKey: Bool? = nil, generatedByDefaultAsIdentity: Bool = false, notNull: Bool = true, default: String? = nil) {
//        var attributes: [String] = []
//        if let primaryKey = primaryKey {
//            if primaryKey {
//                attributes.append("PRIMARY KEY")
//            }
//        } else if keyPath == Model.idKey {
//            attributes.append("PRIMARY KEY")
//        }
//        if generatedByDefaultAsIdentity {
//            attributes.append("GENERATED BY DEFAULT AS IDENTITY")
//        }
//        if notNull {
//            attributes.append("NOT NULL")
//        }
//        if let `default` = `default` {
//            attributes.append("DEFAULT " + `default`)
//        }
//        field(for: .fluentProperty(.keyPath(keyPath)), type: .init(name: type.name, parameters: type.parameters, attributes: attributes))
//    }
//}
